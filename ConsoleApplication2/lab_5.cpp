#include <iostream>        // Подключаем библиотеки       
#include <string>                
#include <math.h>    
#include <cmath>
#include <conio.h>

using namespace std;


// Файл File_2.cpp
//void f1(); // Объявление (прототип) функции f1()
//extern int N; // Объявление внешней переменной
 //Найти расстояние между двумя точками с заданными координатами (x1, y1) и (x2, y2)

int task_5_1() 
{ 
    double x1, x2, y1, y2, distance;  // Объявляем именованные области памяти (переменные)
    // ввод начальных данных для алгоритма с клавиатуры (x1, y1) и (x2, y2)
    cout << "x1:";  //  отображения текста в консоли
    cin >> x1;   // Ввод с консоли, запись в переменную
    cout << "y1:";
    cin >> y1;
    cout << "x2:";
    cin >> x2;
    cout << "y2:";
    cin >> y2;
    // Вычисление                           
    distance = sqrt(pow((x2 - x1), 2) + pow((y2 - y1), 2)); // расстояние между двумя точками
    cout << "Answer =" << distance;  // вывод результата

	return 0;
}


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//Даны три точки A, B, C на числовой оси. Найти длины отрезков AC
//и BC и их сумму.

// функция нахождения длины одного отрезка
double funct(double a, double b)  // объявляем функцию 
{
    return abs(a - b); // результат функции      abs()   возвращает модуль значения
}

int task_5_2()
{
    double a, c, b; //три точки A,  C, B
    cin >> a >> c >> b;
    double AC = funct(a, c); // расстояние 1 отрезка
    double BC = funct(c, b); // расстояние 2 отрезка
    cout << "AC=" << AC << endl << "BC=" << BC << endl << "SUM=" << AC + BC;  // вывод результата (вычисление суммы)
    return 0;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//Даны три точки A, B, C на числовой оси. Точка C расположена
//между точками A и B.Найти произведение длин отрезков AC и BC


int task_5_3()
{
    // ввод начальных данных для алгоритма с клавиатуры
    float a, b, c;
    cout << "А:";
    cin >> a;
    cout << "В:";
    cin >> b;
    cout << "С:";
    cin >> c;
    //вычесление и вывод 
    cout << "Answer= " << (c - a) * (b - c);
    return 0;
}

//////////////////////////////////////////////////////////////////////////////////////////

 //Даны координаты двух противоположных вершин прямоугольника:
//(x1, y1), (x2, y2). Стороны прямоугольника параллельны осям координат.
//Найти периметр и площадь данного прямоугольника.



int task_5_4() {
    // ввод начальных данных для алгоритма с клавиатуры
    double x1, y1, x2, y2, a, b, p, s;
    cout << "x1: ";
    cin >> x1;
    cout << "y1: ";
    cin >> y1;
    cout << "x2: ";
    cin >> x2;
    cout << "y2: ";
    cin >> y2;
    //вычисления
    a = abs(x1 - x2); //нахождение стороны
    b = abs(y1 - y2); //нахождение стороны
    p = (a + b) * 2; //нахождение периметра
    s = a * b;//нахождение площади
    //вывод
    cout << "P: " << p << endl;
    cout << "S': " << s;
    return 0;
}


/////////////////////////////////////////////////////////////////////////////////////////////////////////////


//Даны координаты трех вершин треугольника : (x1, y1), (x2, y2), (x3, y3).Найти его периметр и площадь


int task_5_5()
{
    // ввод стартовых данных
    double x1, y1, x2, y2, x3, y3, a, b, c, P, p, S;
    cout << "Vvedit koordinati pervoy vershini (x1, y1): ";
    cin >> x1 >> y1;
    cout << "Vvedit koordinati vtoroy vershini (x2, y2): ";
    cin >> x2 >> y2;
    cout << "Vvedit koordinati tretey vershini (x3, y3): ";
    cin >> x3 >> y3;
    //стророны
    a = sqrt(pow((x1 - x2), 2) + pow((y1 - y2), 2));
    b = sqrt(pow((x1 - x3), 2) + pow((y1 - y3), 2));
    c = sqrt(pow((x2 - x3), 2) + pow((y2 - y3), 2));
    // периметр площадь
    P = a + b + c;
    p = P / 2;  // полупериметр требуется в след. формуле
    S = sqrt(p * (p - a) * (p - b) * (p - c));
    // Вывод
    cout << "Perimetr: " << P << "." << endl;
    cout << "Ploshyad': " << S << "." << endl;
    return 0;
}
